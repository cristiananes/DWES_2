package com.example.demo.controladores;

import java.io.IOException;
import java.io.PrintWriter;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.Astronauta;
import com.example.demo.repository.AstronautaRepository;

import jakarta.servlet.http.HttpServletResponse;
//---------------------------------------------------------
import org.apache.poi.xslf.usermodel.XMLSlideShow;
import org.apache.poi.xslf.usermodel.XSLFSlide;
import org.apache.poi.xslf.usermodel.XSLFTextBox;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.ByteArrayOutputStream;
import java.util.List;


@RestController
public class AstronautaRestController {

	@Autowired
	AstronautaRepository astronautaRepository;

		//ruta de csv
	    @GetMapping("/astronauta-csv")
	    public void exportarCSV(HttpServletResponse response) throws IOException {
	        // Configurar la respuesta HTTP para la descarga
	        response.setContentType("text/csv");
	        response.setHeader("Content-Disposition", "attachment; filename=\"astronautas.csv\"");

	        // Obtener los datos
	        Iterable<Astronauta> astronautas = astronautaRepository.findAll();

	        // Escribir los datos en el CSV
	        try (PrintWriter writer = response.getWriter()) {
	            // Cabeceras del CSV
	            writer.println("ID,Nombre,Edad");

	            // Datos de los astronautas
	            for (Astronauta astronauta : astronautas) {
	                writer.println(String.format("%d,%s,%d",
	                        astronauta.getId(),
	                        astronauta.getNombre(),
	                        astronauta.getEdad()));
	            }
	        }
	    }
	    
	    //ruta de excel 
	    @GetMapping("/descargar/astronautas/powerpoint")
	    public ResponseEntity<byte[]> descargarAstronautasPowerPoint() {
	        try {
	            // Obtener datos de astronautas (aquí un ejemplo estático, reemplaza con tu lógica)
	            List<String> astronautas = List.of(
	                "Neil Armstrong",
	                "Buzz Aldrin",
	                "Yuri Gagarin",
	                "Valentina Tereshkova"
	            );

	            // Crear presentación PowerPoint
	            XMLSlideShow ppt = new XMLSlideShow();
	            for (String astronauta : astronautas) {
	                XSLFSlide slide = ppt.createSlide();
	                XSLFTextBox textBox = slide.createTextBox();
	                textBox.setText(astronauta);
	            }

	            // Convertir presentación a bytes
	            ByteArrayOutputStream out = new ByteArrayOutputStream();
	            ppt.write(out);
	            byte[] pptBytes = out.toByteArray();
	            out.close();

	            // Configurar encabezados HTTP para la respuesta
	            HttpHeaders headers = new HttpHeaders();
	            headers.add(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=astronautas.pptx");
	            headers.add(HttpHeaders.CONTENT_TYPE, "application/vnd.openxmlformats-officedocument.presentationml.presentation");

	            return new ResponseEntity<>(pptBytes, headers, HttpStatus.OK);

	        } catch (Exception e) {
	            e.printStackTrace();
	            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
	        }
	    }
	
}
